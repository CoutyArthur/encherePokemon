plugins {
    id 'java'
    id 'io.quarkus'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-undertow'

    implementation 'io.quarkus:quarkus-arc'
    // Quarkus Core
    implementation 'io.quarkus:quarkus-resteasy'                     // RESTEasy pour exposer des endpoints REST
    implementation 'io.quarkus:quarkus-resteasy-jackson'            // Support JSON (via Jackson)

    // JWT pour l'authentification
    implementation 'io.quarkus:quarkus-smallrye-jwt'                // Gestion des tokens JWT

    // JPA et Hibernate pour la gestion des utilisateurs
    implementation 'io.quarkus:quarkus-hibernate-orm'               // ORM (Hibernate) pour les entités
    implementation 'io.quarkus:quarkus-hibernate-orm-panache'       // Simplification ORM avec Panache
    implementation 'io.quarkus:quarkus-jdbc-h2'                     // Base de données H2 pour le développement/test

    // Hachage des mots de passe
    implementation 'org.mindrot:jbcrypt:0.4'                        // Bcrypt pour hacher les mots de passe

    // Tests unitaires
    testImplementation 'io.quarkus:quarkus-junit5'                  // Tests avec JUnit 5
    testImplementation 'io.rest-assured:rest-assured'

    implementation 'io.quarkus:quarkus-smallrye-jwt'

    implementation 'io.quarkus:quarkus-rest-client-reactive:3.2.0.Final'
    implementation 'io.quarkus:quarkus-rest-client-reactive-jackson:3.2.0.Final'
    implementation 'io.quarkus:quarkus-rest-client' //
    implementation "io.quarkus:quarkus-arc"//



}

group 'com.example'
version '1.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}
compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}
